''' 1. Реализовать функцию, принимающую два числа (позиционные аргументы)
 и выполняющую их деление. Числа запрашивать у пользователя,
 предусмотреть обработку ситуации деления на ноль. '''


def fn_division(num1, num2):
    try:
        num1 = int(input('Введите первое число: '))
        num2 = int(input('Введите второе число: '))
        res = num1 / num2
    except ZeroDivisionError:
        return 'На 0 делить нельзя!'
    except ValueError:
        return 'Ошибка! Вводите только цифры!'
    return res


print(fn_division())

''' 2. Выполнить функцию, которая принимает несколько параметров,
 описывающих данные пользователя: имя, фамилия, год рождения,
 город проживания, email, телефон. Функция должна принимать параметры как
 именованные аргументы. Осуществить вывод данных о пользователе одной строкой. '''


def fn_user_data(**use):
    print(use)


fn_user_data(name='Иван',
             lastname='Петров',
             year='1408',
             city='Краснодар',
             email='qwerty@mail.ru',
             phone='89991234567')

''' 3. Реализовать функцию my_func(), которая принимает три
 позиционных аргумента и возвращает сумму наибольших двух аргументов. '''


def my_func(*abc):
    print(sum(sorted(list(abc), reverse=True)[:-1]))


my_func(10, 9, 3)

''' 4. Программа принимает действительное положительное число x и целое
 отрицательное число y. Выполните возведение числа x в степень y.
 Задание реализуйте в виде функции my_func(x, y).
 При решении задания нужно обойтись без встроенной функции возведения числа в степень.
 Подсказка: попробуйте решить задачу двумя способами.
 Первый — возведение в степень с помощью оператора **.
 Второй — более сложная реализация без оператора **, предусматривающая использование цикла. '''


def my_func(x, y):
    try:
        x = abs(x)
        if y > 0:
            res2 = x ** (-y)
        else:
            res2 = x ** y
    except TypeError:
        return 'Вводите только цифры!'
    return res2


print(
    my_func(
        int(input('Введите основание: ')), int(input('Введите степень: -'))))


# Вариант 2

def my_func(x, y):
    try:
        res = 1
        for i in range(abs(y)):
            res *= x
        res = 1 / res
    except TypeError:
        return 'Вводите только числа!'
    return res


print(
    my_func(
        int(input('Введите основание: ')), int(input('Введите степень: -'))))

'''' 5. Программа запрашивает у пользователя строку чисел, разделённых пробелом.
 При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел,
 разделённых пробелом и снова нажать Enter. Сумма вновь введённых чисел будет добавляться
 к уже подсчитанной сумме.
 Но если вместо числа вводится специальный символ, выполнение программы завершается.
 Если специальный символ введён после нескольких чисел, то вначале
 нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу. '''


def fn_sum():
    res = 0
    while True:
        num = input('Введите числа через пробел: ').split()
        try:
            res += sum(map(int, num))
            print(res)
        except ValueError:
            break


fn_sum()

''' 6-7. Реализовать функцию int_func(),
 принимающую слова из маленьких латинских букв
 и возвращающую их же, но с прописной первой буквой.
 Например, print(int_func(‘text’)) -> Text. '''


def int_func(*arg):
    word = input('Введите слова: ').title()
    print(word)


int_func()
